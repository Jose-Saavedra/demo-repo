log(2)
phone<-80
phone+phone
80+100+83+6+90
Phone-phone
Phone<--80
expenses<-c(phone, transportation, groceries, gym, rent, other)
remove(Phone)
phone<- 80
transportation<- 20
groceries- 527
qym<- 10
rent<-1500
other<-83
expenses<-c(phone, transportation, groceries, gym, rent, other)
phone<- 80
transportation<- 20
groceries<- 527
qym<- 10
rent<-1500
other<-83
expenses<-c(phone, transportation, groceries, gym, rent, other)
phone<- 80
transportation<- 20
groceries<- 527
gym<- 10
rent<-1500
other<-83
phone<- 80
transportation<- 20
groceries<- 527
gym<- 10
rent<-1500
other<-83
remove(Phone)
expenses<-c(phone, transportation, groceries, gym, rent, other)
barplot(expenses)
barplot(sort(expenses))
barplot(sort(label(expenses)))
barplot(sort(expenses))
barplot(sort(expenses))
barplot(sort(expenses))
penses))
barplot(sort(expenses))
barplot(sort(expenses))
barplot(sort( expenses ))
barplot(sort( expenses ))
barplot(sort( expenses ), horiz=TRUE, names.arg=expenses)
barplot(sort( expenses ), names.arg=expenses)
barplot(sort( expenses ), names.arg=sort(expenses),n)
barplot(sort( expenses ), names.arg=sort(expenses))
barplot(sort( expenses ), names.arg=c("gym","transportation","phone", "other","groceries","rent"))
barplot(sort( expenses, decreasing ), names.arg=c("gym","transportation","phone", "other","groceries","rent"))
barplot(sort( expenses, decreasing = TRUE ), names.arg=c("gym","transportation","phone", "other","groceries","rent"))
c
a<- 3
b<- 4
c<-sqrt(a^2+b^2)
c
P<-factorial(n)/(fractorial(k)*factorial(n-k))*p^(k)*(1-p)^(n-k)
n<-5
k<-3
p<-.5
P<-factorial(n)/(fractorial(k)*factorial(n-k))*p^(k)*(1-p)^(n-k)
n<-5
k<-3
p<-.5
P<-factorial(n)/(factorial(k)*factorial(n-k))*p^(k)*(1-p)^(n-k)
P2<- choose(n,k)*p^(k)*(1-p)^(n-k)
P3<- choose(10,3)*p^(3)*(1-p)^7
??binomial
P3<- choose(10,3)*(1/6)^(3)*(1-1/6)^7
help.search(binomial)
help.search("binomial")
help.search(binomial)
help(binomial)
help("binomial")
help(binomial)
help.search(binomial)
help.search(binomial)
help.search("binomial")
help.search("binomial")
help.search("binomial")
dbinom(2, 5,.5,log=FALSE)
dbinom(3,3,1/6,log=FALSE)
hi*bye
hi<-c(1,2,3)
bye<-c(4,5,6)
hi*bye
getwd()
autos[autos$num.of_cylinders=='twelve',]$make
names_columns <-  c('symboling',
'normalized_losses'
,'make','fuel_type'
,'aspiration',
'num_of_doors',
'body_style',
'drive_wheels',
'engine_location',
'wheel_base',
'length',
'width',
'height',
'curb_weight',
'engine_type',
'num-of_cylinders',
'engine_size',
'fuel_system',
'bore',
'stroke',
'compression_ratio',
'horsepower',
'peak_rpm',
'city_mpg',
'highway_mpg',
'price'
)
columns_types <- c('integer',
'real',
'character',
'character',
'character',
'character',
'character',
'character',
'character',
'real',
'real',
'real',
'real',
'integer',
'character',
'character',
'integer',
'character',
'real',
'real',
'real',
'integer',
'integer',
'integer',
'integer',
'integer'
)
autos <- read.csv(file = 'imports-85.data',
col.names = names_columns,
colClasses = columns_types,
na.strings = '?',
header = F)
str(autos)
library(readr)
autos2 <- read_csv(file = 'imports-85.data',
col_names = names_columns,
na='?',
col_types = list(
normalized_losses=col_double()
))
str(autos2)
#Porblem 3
#a
auto3 <- read.csv(file = 'imports-85.data')
#the first row becomes the column names this is bad you can indecate not to have column names
#b
auto3 <- read.csv(file = 'imports-85.data', header = F)
#the top code gives use all the data with not columns names (generic V# names)
#c
auto3 <- read.table(file = 'imports-85.data', sep = ',',header = F,na.strings = '?')
str(auto3)
#they become factors since the columns had at least one character, and a column of characters in dataframe are automatilly made
#as factors
#d
object.size(auto3)
#37464bytes
auto3 <- read.table(file = 'imports-85.data',
sep = ',',
header = F,
colClasses = columns_types,
na.strings='?'
)
object.size(auto3)
#42328 bytes
#the reason the second is bigger is come from the difference in data types, mainly the fact that
#e
autoM <- data.matrix(auto3,rownames.force = NA)
str(autoM)
#we get a matrix of real and where there were characters are now NA
#Problem 4
hist(autos$price, col = c('blue','red', 'green'),xlab = 'Price in Dollar',
main = 'Histogram of Prices of Autos')
boxplot(autos$horsepower, horizontal = T, main='Box plot og horsepower')
barplot(sort(table(autos$body_style), decreasing = T))
stars(autos[autos$aspiration=='turbo',][,c(10:13,26)],main = 'stars plot of cars with turbo',key.loc = c(12,2))
?stars
#problem 5
mean(autos[autos$fuel_type =='gas',]$price, na.rm = TRUE)
mean(autos[autos$fuel_type=='diesel',]$price, na.rm = TRUE)
autos[autos$num.of_cylinders=='twelve',]$make
A <- aggregate(autos[,"make"], by=list(autos$make),FUN = length)
A[which.max(A$x),]$Group.1
autos[which.max(autos$horsepower),]$price
range_city <- range(autos$city_mpg, na.rm = T)
Bottom10 <- c(range_city[1],range_city[2]-(range_city[2]-range_city[1])*9/10)
Bottom10
range_highway<- range(autos$highway_mpg, na.rm = T)
Top10 <- c(range_highway[2]-(range_highway[2]-range_highway[1])/10,range_highway[2])
Top10
median(autos[autos$city_mpg<Bottom10[2],]$price,na.rm = T)
#Problem 6
#a
#dat$column_name allows us to call on the column of name: column_name and treating this as a vector
#dat$xyz if xyz does not exist then R returns NULL
#b
mtcars$mpg#good
mtcars[ ,1]#good
mtcars[[1]]#good
mtcars[ ,mpg]#bad
mtcars[["mpg"]]#good
mtcars$"mpg"#good
mtcars[ ,"mpg"]#good
#c
#number 4 is worng since mpg itself is not a object with a value so R doesnt know what to do with it and fais
#d
# Yes one can add a list to a data frame since the a dataframe is a list and a list can be appended to a list
mtcars$NEWlist <- list(1,'five', T,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,NA,1,1,1,1,1,1,1,1,1,1)
mtcars <- mtcars[,-12]
#e
B <- as.list(mtcars)
#a list of ll vectors numerical vectors
#f
C <- as.data.frame(B)
#we loose the row names of the cars
#Problem 7
library(corrplot)
qdat <- cor(na.omit(autos[,c(10:14, 17, 19:26)]))
#corrplot number 1
corrplot(qdat, method = 'circle')
#corrplot number 2
corrplot(qdat, method = 'color')
#problem 8
PCA_qdat <- prcomp(qdat, scale. = T)
# eigenvalues
eigenvalues <- PCA_qdat$sdev^2
eigenvalues
sum(eigenvalues)
barplot(eigenvalues)
#percent of variation captured by the first components
sum(eigenvalues[1:3]/14)*100
PC <- as.data.frame(PCA_qdat$x)
loadings <- as.data.frame(PCA_qdat$rotation)
PC$PC1
plot(PC$PC1, PC$PC2,
xlab = 'Principal Component 1',
ylab = 'Principal Component 2')
plot(loadings$PC1,loadings$PC2,
xlab = 'Principal Component 1',
ylab = 'Principal Component 2')
biplot(PCA_qdat, scale = 0)
PC <- as.data.frame(PCA_qdat$x)
#problem 8
PCA_qdat <- prcomp(qdat, scale. = T)
qdat <- cor(na.omit(autos[,c(10:14, 17, 19:26)]))
autos <- read.csv(file = 'imports-85.data',
col.names = names_columns,
colClasses = columns_types,
na.strings = '?',
header = F)
setwd("~/spring2018stat133/Homework/hw01")
#Problem 2
names_columns <-  c('symboling',
'normalized_losses'
,'make','fuel_type'
,'aspiration',
'num_of_doors',
'body_style',
'drive_wheels',
'engine_location',
'wheel_base',
'length',
'width',
'height',
'curb_weight',
'engine_type',
'num-of_cylinders',
'engine_size',
'fuel_system',
'bore',
'stroke',
'compression_ratio',
'horsepower',
'peak_rpm',
'city_mpg',
'highway_mpg',
'price'
)
columns_types <- c('integer',
'real',
'character',
'character',
'character',
'character',
'character',
'character',
'character',
'real',
'real',
'real',
'real',
'integer',
'character',
'character',
'integer',
'character',
'real',
'real',
'real',
'integer',
'integer',
'integer',
'integer',
'integer'
)
autos <- read.csv(file = 'imports-85.data',
col.names = names_columns,
colClasses = columns_types,
na.strings = '?',
header = F)
str(autos)
library(readr)
autos2 <- read_csv(file = 'imports-85.data',
col_names = names_columns,
na='?',
col_types = list(
normalized_losses=col_double()
))
str(autos2)
#Porblem 3
#a
auto3 <- read.csv(file = 'imports-85.data')
#the first row becomes the column names this is bad you can indecate not to have column names
#b
auto3 <- read.csv(file = 'imports-85.data', header = F)
#the top code gives use all the data with not columns names (generic V# names)
#c
auto3 <- read.table(file = 'imports-85.data', sep = ',',header = F,na.strings = '?')
str(auto3)
#they become factors since the columns had at least one character, and a column of characters in dataframe are automatilly made
#as factors
#d
object.size(auto3)
#37464bytes
auto3 <- read.table(file = 'imports-85.data',
sep = ',',
header = F,
colClasses = columns_types,
na.strings='?'
)
object.size(auto3)
#42328 bytes
#the reason the second is bigger is come from the difference in data types, mainly the fact that
#e
autoM <- data.matrix(auto3,rownames.force = NA)
str(autoM)
#we get a matrix of real and where there were characters are now NA
#Problem 4
hist(autos$price, col = c('blue','red', 'green'),xlab = 'Price in Dollar',
main = 'Histogram of Prices of Autos')
boxplot(autos$horsepower, horizontal = T, main='Box plot og horsepower')
barplot(sort(table(autos$body_style), decreasing = T))
stars(autos[autos$aspiration=='turbo',][,c(10:13,26)],main = 'stars plot of cars with turbo',key.loc = c(12,2))
?stars
#problem 5
mean(autos[autos$fuel_type =='gas',]$price, na.rm = TRUE)
mean(autos[autos$fuel_type=='diesel',]$price, na.rm = TRUE)
autos[autos$num.of_cylinders=='twelve',]$make
A <- aggregate(autos[,"make"], by=list(autos$make),FUN = length)
A[which.max(A$x),]$Group.1
autos[which.max(autos$horsepower),]$price
range_city <- range(autos$city_mpg, na.rm = T)
Bottom10 <- c(range_city[1],range_city[2]-(range_city[2]-range_city[1])*9/10)
Bottom10
range_highway<- range(autos$highway_mpg, na.rm = T)
Top10 <- c(range_highway[2]-(range_highway[2]-range_highway[1])/10,range_highway[2])
Top10
median(autos[autos$city_mpg<Bottom10[2],]$price,na.rm = T)
#Problem 6
#a
#dat$column_name allows us to call on the column of name: column_name and treating this as a vector
#dat$xyz if xyz does not exist then R returns NULL
#b
mtcars$mpg#good
mtcars[ ,1]#good
mtcars[[1]]#good
mtcars[ ,mpg]#bad
mtcars[["mpg"]]#good
mtcars$"mpg"#good
mtcars[ ,"mpg"]#good
#c
#number 4 is worng since mpg itself is not a object with a value so R doesnt know what to do with it and fais
#d
# Yes one can add a list to a data frame since the a dataframe is a list and a list can be appended to a list
mtcars$NEWlist <- list(1,'five', T,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,NA,1,1,1,1,1,1,1,1,1,1)
mtcars <- mtcars[,-12]
#e
B <- as.list(mtcars)
#a list of ll vectors numerical vectors
#f
C <- as.data.frame(B)
#we loose the row names of the cars
#Problem 7
library(corrplot)
qdat <- cor(na.omit(autos[,c(10:14, 17, 19:26)]))
#corrplot number 1
corrplot(qdat, method = 'circle')
#corrplot number 2
corrplot(qdat, method = 'color')
#problem 8
PCA_qdat <- prcomp(qdat, scale. = T)
# eigenvalues
eigenvalues <- PCA_qdat$sdev^2
eigenvalues
sum(eigenvalues)
barplot(eigenvalues)
#percent of variation captured by the first components
sum(eigenvalues[1:3]/14)*100
PC <- as.data.frame(PCA_qdat$x)
loadings <- as.data.frame(PCA_qdat$rotation)
PC$PC1
plot(PC$PC1, PC$PC2,
xlab = 'Principal Component 1',
ylab = 'Principal Component 2')
plot(loadings$PC1,loadings$PC2,
xlab = 'Principal Component 1',
ylab = 'Principal Component 2')
biplot(PCA_qdat, scale = 0)
autos[autos$num.of_cylinders=='twelve',]$make
mean(autos[autos$fuel_type=='diesel',]$price, na.rm = TRUE)
A[which.max(A$x),]$Group.1
A <- aggregate(autos[,"make"], by=list(autos$make),FUN = length)
A
A <- aggregate(autos[,"make"], by=list(autos$make,autos$fuel_type),FUN = length)
A
A[which.max(A[autos$fuel_type=='diesel',]$x),]$Group.1
A[which.max(A[autos$fuel_type=='diesel',]$x),]$Group.1
A[which.max(A[autos$fuel_type=='diesel',]$x),]
A[which.max(A[A$Group.2=='diesel',]$x),]
A[which.max(A[A$Group.2=='diesel',]$x),]$Group.1
autos[which.max(autos$horsepower),]$price
autos[which.max(autos$horsepower),]
View(autos)
quantile(autos$city_mpg, probs = .1)
quantile(autos$highway_mpg, probs = .9)
plot(loadings$PC1,loadings$PC2,
xlab = 'Principal Component 1',
ylab = 'Principal Component 2')
biplot(PCA_qdat, scale = 0)
plot(PC$PC1, PC$PC2,
xlab = 'Principal Component 1',
ylab = 'Principal Component 2')
plot(loadings$PC1,loadings$PC2,
xlab = 'Principal Component 1',
ylab = 'Principal Component 2')
plot(loadings$PC1,loadings$PC2,
xlab = 'Loading 1',
ylab = 'Loading 2')
biplot(PCA_qdat, scale = 0)
#problem 8
PCA_qdat <- prcomp(qdat, scale. = T)
#problem 8
PCA_qdat <- prcomp(qdat, scale. = T)
#corrplot number 1
corrplot(qdat, method = 'circle')
#corrplot number 2
corrplot(qdat, method = 'color')
qdat <- cor(na.omit(autos[,c(10:14, 17, 19:26)]))
qdat <- cor(na.omit(autos[,c(10:14, 17, 19:26)]))
mtcars$NEWlist <- list(1,'five', T,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,NA,1,1,1,1,1,1,1,1,1,1)
